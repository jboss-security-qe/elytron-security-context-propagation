embed-server --admin-only=true

# security trace logging
/subsystem=logging/console-handler=CONSOLE:write-attribute(name=level, value=ALL)
/subsystem=logging/logger=org.jboss.security:add(level=ALL)
/subsystem=logging/logger=org.jboss.as.security:add(level=ALL)
/subsystem=logging/logger=org.picketbox:add(level=ALL)
/subsystem=logging/logger=org.apache.catalina.authenticator:add(level=ALL)
/subsystem=logging/logger=org.jboss.as.web.security:add(level=ALL)
/subsystem=logging/logger=org.jboss.as.domain.management.security:add(level=ALL)
/subsystem=logging/logger=org.wildfly.security:add(level=ALL)
/subsystem=logging/logger=org.wildfly.elytron:add(level=ALL)

# enable Elytron across the server
/subsystem=undertow/server=default-server/https-listener=https:remove()
/subsystem=undertow/application-security-domain=other:add(http-authentication-factory=application-http-authentication)
/subsystem=ejb3/application-security-domain=other:add(security-domain=ApplicationDomain)
/subsystem=batch-jberet:write-attribute(name=security-domain, value=ApplicationDomain)
/subsystem=remoting/http-connector=http-remoting-connector:undefine-attribute(name=security-realm)
/core-service=management/access=identity:add(security-domain=ManagementDomain)
/core-service=management/management-interface=http-interface:write-attribute(name=http-upgrade, \
    value={enabled=true, sasl-authentication-factory=management-sasl-authentication})
/core-service=management/management-interface=http-interface:write-attribute(name=http-authentication-factory, \
    value=management-http-authentication)
/core-service=management/management-interface=http-interface:undefine-attribute(name=security-realm)

/subsystem=undertow/server=default-server/host=default-host/setting=http-invoker:remove

/core-service=management/security-realm=ManagementRealm:remove
/core-service=management/security-realm=ApplicationRealm:remove

/subsystem=elytron/filesystem-realm=SeccontextFsRealm:add(path=seccontext-users,relative-to=jboss.server.config.dir)

/subsystem=elytron/security-domain=SeccontextDomain:add(realms=[ \
    {realm=SeccontextFsRealm,role-decoder=groups-to-roles}], \
    default-realm=SeccontextFsRealm, \
    permission-mapper=default-permission-mapper)

/subsystem=elytron/configurable-sasl-server-factory=seccontext-sasl-server-factory:add(sasl-server-factory=elytron, \
    filters=[{pattern-filter="PLAIN"}])
/subsystem=elytron/sasl-authentication-factory=seccontext-sasl-authn-factory:add( \
    sasl-server-factory=seccontext-sasl-server-factory, \
    security-domain=SeccontextDomain, \
    mechanism-configurations=[{mechanism-name=PLAIN}])
/socket-binding-group=standard-sockets/socket-binding=seccontext-remoting-socket:add(port=16444)
/subsystem=remoting/connector=seccontext-connector:add(socket-binding=seccontext-remoting-socket, \
    sasl-authentication-factory=seccontext-sasl-authn-factory)

/subsystem=ejb3/application-security-domain=seccontext-entry:add(security-domain=SeccontextDomain)
/subsystem=ejb3/application-security-domain=seccontext-whoami:add(security-domain=SeccontextDomain)

/subsystem=elytron/http-authentication-factory=seccontext:add(security-domain=SeccontextDomain, \ 
    http-server-mechanism-factory=global, \
    mechanism-configurations=[{mechanism-name=BASIC}])

/subsystem=undertow/application-security-domain=seccontext-web:add(http-authentication-factory=seccontext)
/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name=sasl-authentication-factory, \
    value=seccontext-sasl-authn-factory)

# add test users
/subsystem=elytron/filesystem-realm=SeccontextFsRealm:add-identity(identity=servlet)
/subsystem=elytron/filesystem-realm=SeccontextFsRealm:set-password(identity=servlet, clear={password=servlet})
/subsystem=elytron/filesystem-realm=SeccontextFsRealm:add-identity-attribute(identity=servlet, name=groups, value=["servlet"])

/subsystem=elytron/filesystem-realm=SeccontextFsRealm:add-identity(identity=entry)
/subsystem=elytron/filesystem-realm=SeccontextFsRealm:set-password(identity=entry, clear={password=entry})
/subsystem=elytron/filesystem-realm=SeccontextFsRealm:add-identity-attribute(identity=entry, name=groups, value=["entry"])

/subsystem=elytron/filesystem-realm=SeccontextFsRealm:add-identity(identity=whoami)
/subsystem=elytron/filesystem-realm=SeccontextFsRealm:set-password(identity=whoami, clear={password=whoami})
/subsystem=elytron/filesystem-realm=SeccontextFsRealm:add-identity-attribute(identity=whoami, name=groups, value=["whoami"])

stop-embedded-server
